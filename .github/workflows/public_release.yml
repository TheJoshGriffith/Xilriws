name: public_release

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  PUBLIC_REPO_NAME: UnownHash/Xilriws-Public
  PUBLIC_IMAGE_NAME: unownhash/xilriws-public
  CION_IMAGE_NAME: ccev/cion-xilriws

jobs:
  release:
    permissions: read-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.XILRIWS_RELEASE_CLASSIC }}
          submodules: true

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Generate requirements.txt
        run: poetry export -f requirements.txt --output requirements.txt

#      - name: Build with PyInstaller
#        run: |
#          poetry run pyinstaller app.py --onefile -n xilriws

      - name: Prepare Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

#      - name: Update submodule
#        run: |
#          git pull --recurse-submodules
#          git submodule update --remote --recursive
#
#      - name: Push to maltelogin
#        run: |
#          git remote set-url origin https://x-access-token:${{ secrets.XILRIWS_RELEASE_CLASSIC }}@github.com/UnownHash/maltelogin
#          git commit -am "Update xilriws submodule" && git push || echo "No changes to commit"
#
#      - name: Copy xilriws files
#        run: |
#          cp dist/xilriws xilriws-public/xilriws
#
#      - name: Push to Xilriws-Public
#        run: |
#          cd xilriws-public
#          git remote set-url origin https://x-access-token:${{ secrets.XILRIWS_RELEASE_CLASSIC }}@github.com/UnownHash/Xilriws-Public
#          git checkout main
#          git commit -am "Xilriws release" && git push || echo "No changes to commit"
#          cd ..

      - name: Build Cion-Mode with PyInstaller
        run: |
          poetry run pyinstaller app_cion.py --onefile -n xilriws_cion

      - name: Clone Cion
        run: |
          git clone https://x-access-token:${{ secrets.CION_REPO_ACCESS }}@github.com/ccev/cion

      - name: Clone Xilriws-Public into cion
        run: |
          rm -r -f cion/cion-xilriws
          git clone https://github.com/UnownHash/Xilriws-Public cion/cion-xilriws

      - name: Copy xilriws files
        run: |
          cp dist/xilriws_cion cion/cion-xilriws/xilriws
          cd cion
          rm -r -f cion-xilriws/.git
          rm -r -f cion-xilriws/.github

      - name: Push to Cion
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.CION_REPO_ACCESS }}@github.com/ccev/cion
          git commit -am "Update xilriws submodule" && git push || echo "No changes to commit"

#      - name: Copy xilriws files
#        run: |
#          cp dist/xilriws xilriws-public/xilriws
#
#      - name: Push to Xilriws-Public
#        run: |
#          cd xilriws-public
#          git remote set-url origin https://x-access-token:${{ secrets.XILRIWS_RELEASE_CLASSIC }}@github.com/UnownHash/Xilriws-Public
#          git checkout main
#          git commit -am "Xilriws release" && git push || echo "No changes to commit"
