name: public_release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag'
        required: true
        default: 'xilriws-v0.x.x'


env:
  REGISTRY: ghcr.io
  PUBLIC_REPO_NAME: UnownHash/Xilriws-Public

jobs:
  release:
    permissions: read-all
    runs-on: apline-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Generate requirements.txt
        run: poetry export -f requirements.txt --output requirements.txt

      - name: Build with PyInstaller
        run: |
          poetry run pyinstaller app.py --onefile -n xilriws && cp config.json.example dist/config.json.example

      - name: Create Release Public
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.XILRIWS_RELEASE_CLASSIC }}
        with:
          name: Xilriws ${{ inputs.tag }}
          tag_name: ${{ inputs.tag }}
          draft: false
          prerelease: true
          fail_on_unmatched_files: true
          repository: ${{ env.PUBLIC_REPO_NAME }}
          files: |
            ./dist/*

#  build-and-push-image:
#    runs-on: ubuntu-latest
#    permissions: read-all
#    steps:
#      - name: Check for testing tag
#        id: check_image_tag
#        run: echo "imagetag=$(echo ${{ inputs.tag }} | grep -q -E 'testing' && echo testing || echo latest)" >> $GITHUB_OUTPUT
#      - name: Checkout repository
#        uses: actions/checkout@v4
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Log in to the Container registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.SWIRLIX_RELEASE_CLASSIC }}
#      - name: Build and push Docker image to public repository
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: Dockerfile
#          platforms: linux/amd64,linux/arm64
#          push: true
#          build-args: |
#            VERSION=${{ inputs.tag }}
#          labels: |
#            package-name=swirlix-public
#          tags: |
#            ${{ env.REGISTRY }}/${{ env.PUBLIC_IMAGE_NAME }}:${{ steps.check_image_tag.outputs.imagetag }}
#            ${{ env.REGISTRY }}/${{ env.PUBLIC_IMAGE_NAME }}:${{ inputs.tag }}